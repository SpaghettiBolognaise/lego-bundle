{% set extraparams = extraparams|merge(filter.currentparameters) %}
<div class="row">
    {% include 'IdkLegoBundle:Default:_html_element.html.twig' with {'adminlist':adminlist,'position':'before_filter'} %}
    {% include 'IdkLegoBundle:AdminListTwigExtension:filters.html.twig' with {'adminlist':adminlist } %}
    {% include 'IdkLegoBundle:Default:_html_element.html.twig' with {'adminlist':adminlist,'position':'after_filter'} %}
</div>
    <div class="box">

        {% include adminlist.listHeaderTemplate with {'adminlist':adminlist} %}


      <div class="box-body">

    {% if adminlist.hasBulkActions %}
            <form action="#" method="POST" name="bulkform">
                {% endif %}
    <div class="table_overflow_fix table-responsive">
        <table class="table table-striped table-hover table-bordered {% if adminlist.hasSort() %}table-sortable{% endif %} responsive">
            <thead>
                <tr>
                    {% set nbCol = 1 %}
                    {% if adminlist.hasBulkActions %}
                        {% set nbCol = nbCol + 1 %}
                        <th style="width: 15px;">
                            <input type="checkbox" id="js-all-bulk-checkbox">
                        </th>
                    {% endif %}
                    {% for column in adminlist.columns%}
                        {% if column.autoDisplay %}
                            {% set nbCol = nbCol + 1 %}
                            {% set columnName = column.name %}
                            {% set columnkey = column.header %}
                            {% set orderDirection = "DESC" %}
                            {% set extraHeaderClass = "" %}
                            {% if ( columnName == adminlist.orderBy )%}
                                {% if adminlist.orderDirection == "DESC" %}
                                    {% set orderDirection = "ASC" %}
                                    {% set extraHeaderClass = "sorting_desc" %}
                                {% else %}
                                    {% set extraHeaderClass = "sorting_asc" %}
                                {% endif %}
                            {% else %}
                                {% set extraHeaderClass = "sorting" %}
                            {% endif %}
                            <th {% if column.style %} style="{{ column.style }}"  {% endif %}{% if adminlist.hasSort(columnName) %} class="{{extraHeaderClass}}" onclick="window.location = '{{ path(basepath, extraparams|merge({ 'orderBy': columnName, "orderDirection": orderDirection }))}}'"{% endif %}>
                                <span class="pull-right sort-icon"></span>
                                {{ columnkey | trans }}
                            </th>
                        {% endif %}
                    {% endfor %}
                    {% if not adminlist.hideItemAction() %}
                        <th class="actions-header">{{ 'Actions'|trans }}</th>
                    {% endif %}
                </tr>
            </thead>
            <tbody>
            {% for item in adminlist.items(extraparams) %}
                {% include 'IdkLegoBundle:Default:_rupture.html.twig' with {'adminlist':adminlist,'item':item,'first':loop.first} %}
                {% include 'IdkLegoBundle:Default:_line.html.twig' with {'adminlist':adminlist,'item':item,'index':loop.index} %}
            {% endfor %}
            </tbody>
        </table>

        {# call in LleAdminListBundle:Default:_line.html.twig #}
        <script>
            function reloadLine(elm,tr){
                $('#'+elm.attr('data-line')).replaceWith(tr);
                $("select.select2").select2();
            }

            function deleteElement(elm, data){
                if(data.status == 'ok'){
                    $('#'+elm.attr('data-line')).hide();
                } else {
                    lle.dialog('error', data.message);
                }
            }
        </script>
    </div>

    {% if adminlist.hasBulkActions %}
            <div class="row">
                <div class="col-md-12 btn-group">
                    {% for action in adminlist.getBulkActions() %}
                        {% set url = action.getUrl(adminlist) %}
                        {% if action.template is not null %}
                            {% include action.template with {'action': action} %}
                        {% elseif action.choices %}
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label class="col-sm-4" for="bul_action_{{ action.id }}">{{ action.getLabel() }}</label>
                                    <div class="col-sm-8">
                                        <select id="bul_action_{{ action.id }}" name="value" onchange="return doBulkAction('{{ path(url["path"], url[("params")] ) }}')" class="select2">
                                            <option value=""></option>
                                            {% for key,value in action.choices %}
                                                <option value="{{ key }}">{{ value }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>
                            </div>
                        {% else %}
                            <a href="#" onclick="return doBulkAction('{{ path(url["path"], url[("params")] ) }}')" class="btn btn-default disabled js-bulk-button pull-right">
                                {% if action.getIcon() is not null %}
                                    <i class="icon-{{ action.icon }} }}"></i> {{ action.label }}
                                {% else %}
                                    {{ action.getLabel() }}
                                {% endif %}
                            </a>
                        {% endif %}
                    {% endfor %}
                </div>
            </div>
            <script>
                function doBulkAction(url) {
                    document.bulkform.action = url;
                    document.bulkform.submit();

                    return false;
                }


                function validateBulkCheckboxes() {
                    var allChecked = true;
                    var oneChecked = false;

                    var checkboxes = document.querySelectorAll('.js-bulk-checkbox');
                    for (var i=0; i<checkboxes.length; i++) {
                        var cb = checkboxes[i];
                        if (cb.checked == true) {
                            oneChecked = true;
                        } else {
                            allChecked = false;
                        }
                    }

                    $('#js-all-bulk-checkbox').prop('checked', allChecked);

                    if (oneChecked) {
                        $('.js-bulk-button').removeClass('disabled');
                    } else {
                        $('.js-bulk-button').addClass('disabled');
                    }
                }

                var allCheckbox = document.getElementById('js-all-bulk-checkbox');
                allCheckbox.onchange = function() {
                    if (allCheckbox.checked == true) {
                        $('.js-bulk-checkbox').prop('checked', true);
                        $('.js-bulk-button').removeClass('disabled');
                    } else {
                        $('.js-bulk-checkbox').prop('checked', false);
                        $('.js-bulk-button').addClass('disabled');
                    }
                };

                var checkboxes = document.querySelectorAll('.js-bulk-checkbox');
                for (var key in checkboxes) {
                    checkboxes[key].onchange = validateBulkCheckboxes;
                }
            </script>
        </form>
    {% endif %}
      </div>
    </div>

{% include 'IdkLegoBundle:Default:_html_element.html.twig' with {'adminlist':adminlist,'position':'after_list'} %}
